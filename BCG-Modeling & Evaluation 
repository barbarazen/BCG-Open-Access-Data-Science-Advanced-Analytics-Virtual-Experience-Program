{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data analysis and wrangling\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "# Data visualisation\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline\n",
    "\n",
    "#tensorflow\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "\n",
    "#sklearn\n",
    "from sklearn.preprocessing import MinMaxScaler\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix, classification_report\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "#remove warnings\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Import data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>churn</th>\n",
       "      <th>activity_new</th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>date_activ</th>\n",
       "      <th>date_end</th>\n",
       "      <th>date_modif_prod</th>\n",
       "      <th>date_renewal</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>...</th>\n",
       "      <th>channel_fix</th>\n",
       "      <th>channel_foo</th>\n",
       "      <th>channel_lmk</th>\n",
       "      <th>channel_sdd</th>\n",
       "      <th>channel_usi</th>\n",
       "      <th>origin_ewxe</th>\n",
       "      <th>origin_kamk</th>\n",
       "      <th>origin_ldks</th>\n",
       "      <th>origin_lxid</th>\n",
       "      <th>origin_usap</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>stayed</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>5.490346</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>4.423595</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>24011ae4ebbe3035111d65fa7c15bc57</td>\n",
       "      <td>churned</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.739944</td>\n",
       "      <td>2013-06-01</td>\n",
       "      <td>2016-06-01</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2015-06-01</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>d29c2c54acc38ff3c0614d0a653813dd</td>\n",
       "      <td>stayed</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.668479</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2009-08-01</td>\n",
       "      <td>2016-08-01</td>\n",
       "      <td>2009-08-01</td>\n",
       "      <td>2015-08-01</td>\n",
       "      <td>2.280920</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>764c75f661154dac3a6c254cd082ea7d</td>\n",
       "      <td>stayed</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.736397</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2010-04-01</td>\n",
       "      <td>2016-04-01</td>\n",
       "      <td>2010-04-01</td>\n",
       "      <td>2015-04-01</td>\n",
       "      <td>1.689841</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>bba03439a292a1e166f80264c16191cb</td>\n",
       "      <td>stayed</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3.200029</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2010-03-01</td>\n",
       "      <td>2016-03-01</td>\n",
       "      <td>2010-03-01</td>\n",
       "      <td>2015-03-01</td>\n",
       "      <td>2.382089</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 id    churn  \\\n",
       "0  48ada52261e7cf58715202705a0451c9   stayed   \n",
       "1  24011ae4ebbe3035111d65fa7c15bc57  churned   \n",
       "2  d29c2c54acc38ff3c0614d0a653813dd   stayed   \n",
       "3  764c75f661154dac3a6c254cd082ea7d   stayed   \n",
       "4  bba03439a292a1e166f80264c16191cb   stayed   \n",
       "\n",
       "                       activity_new  cons_12m  cons_gas_12m  date_activ  \\\n",
       "0  esoiiifxdlbkcsluxmfuacbdckommixw  5.490346      0.000000  2012-11-01   \n",
       "1                               NaN  0.000000      4.739944  2013-06-01   \n",
       "2                               NaN  3.668479      0.000000  2009-08-01   \n",
       "3                               NaN  2.736397      0.000000  2010-04-01   \n",
       "4                               NaN  3.200029      0.000000  2010-03-01   \n",
       "\n",
       "     date_end date_modif_prod date_renewal  forecast_cons_12m  ...  \\\n",
       "0  2016-11-01      2012-11-01   2015-11-01           4.423595  ...   \n",
       "1  2016-06-01             NaN   2015-06-01           0.000000  ...   \n",
       "2  2016-08-01      2009-08-01   2015-08-01           2.280920  ...   \n",
       "3  2016-04-01      2010-04-01   2015-04-01           1.689841  ...   \n",
       "4  2016-03-01      2010-03-01   2015-03-01           2.382089  ...   \n",
       "\n",
       "   channel_fix  channel_foo  channel_lmk  channel_sdd  channel_usi  \\\n",
       "0            0            0            1            0            0   \n",
       "1            0            1            0            0            0   \n",
       "2            0            0            0            0            0   \n",
       "3            0            1            0            0            0   \n",
       "4            0            0            1            0            0   \n",
       "\n",
       "   origin_ewxe  origin_kamk  origin_ldks  origin_lxid  origin_usap  \n",
       "0            0            0            1            0            0  \n",
       "1            0            0            0            1            0  \n",
       "2            0            1            0            0            0  \n",
       "3            0            1            0            0            0  \n",
       "4            0            1            0            0            0  \n",
       "\n",
       "[5 rows x 35 columns]"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merge = pd.read_csv('mergee.csv', index_col=[0])\n",
    "merge.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>price_date</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-01-01</td>\n",
       "      <td>0.151367</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-02-01</td>\n",
       "      <td>0.151367</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-03-01</td>\n",
       "      <td>0.151367</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-04-01</td>\n",
       "      <td>0.149626</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>038af19179925da21a25619c5a24b745</td>\n",
       "      <td>2015-05-01</td>\n",
       "      <td>0.149626</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>44.266931</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 id  price_date  price_p1_var  price_p2_var  \\\n",
       "0  038af19179925da21a25619c5a24b745  2015-01-01      0.151367           0.0   \n",
       "1  038af19179925da21a25619c5a24b745  2015-02-01      0.151367           0.0   \n",
       "2  038af19179925da21a25619c5a24b745  2015-03-01      0.151367           0.0   \n",
       "3  038af19179925da21a25619c5a24b745  2015-04-01      0.149626           0.0   \n",
       "4  038af19179925da21a25619c5a24b745  2015-05-01      0.149626           0.0   \n",
       "\n",
       "   price_p3_var  price_p1_fix  price_p2_fix  price_p3_fix  \n",
       "0           0.0     44.266931           0.0           0.0  \n",
       "1           0.0     44.266931           0.0           0.0  \n",
       "2           0.0     44.266931           0.0           0.0  \n",
       "3           0.0     44.266931           0.0           0.0  \n",
       "4           0.0     44.266931           0.0           0.0  "
      ]
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history_data=pd.read_csv('ml_case_training_hist_data.csv')\n",
    "history_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                             0\n",
       "churn                          0\n",
       "activity_new                9545\n",
       "cons_12m                      27\n",
       "cons_gas_12m                   6\n",
       "date_activ                     0\n",
       "date_end                       2\n",
       "date_modif_prod              157\n",
       "date_renewal                  40\n",
       "forecast_cons_12m             41\n",
       "forecast_discount_energy       0\n",
       "forecast_meter_rent_12m        4\n",
       "forecast_price_energy_p1       0\n",
       "forecast_price_energy_p2       0\n",
       "forecast_price_pow_p1          0\n",
       "has_gas                        0\n",
       "imp_cons                      27\n",
       "margin_gross_pow_ele        1139\n",
       "margin_net_pow_ele          1187\n",
       "nb_prod_act                    0\n",
       "net_margin                    97\n",
       "pow_max                        0\n",
       "term                           2\n",
       "channel_epu                    0\n",
       "channel_ewp                    0\n",
       "channel_fix                    0\n",
       "channel_foo                    0\n",
       "channel_lmk                    0\n",
       "channel_sdd                    0\n",
       "channel_usi                    0\n",
       "origin_ewxe                    0\n",
       "origin_kamk                    0\n",
       "origin_ldks                    0\n",
       "origin_lxid                    0\n",
       "origin_usap                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merge.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since the missing figures have popped here again, we need to fill the nulls."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_cons_12m= merge[\"cons_12m\"].mean() \n",
    "mean_cons_gas_12m= merge[\"cons_gas_12m\"].mean()  \n",
    "mean_forecast_cons_12m= merge[\"forecast_cons_12m\"].mean() \n",
    "mean_imp_cons= merge[\"imp_cons\"].mean() \n",
    "mean_margin_gross_pow_ele= merge[\"margin_gross_pow_ele\"].mean() \n",
    "mean_margin_net_pow_ele= merge[\"margin_net_pow_ele\"].mean() \n",
    "mean_net_margin= merge[\"net_margin\"].mean() \n",
    "mean_forecast_meter_rent_12m= merge[\"forecast_meter_rent_12m\"].mean() \n",
    "mean_term= merge[\"term\"].mean() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "metadata": {},
   "outputs": [],
   "source": [
    "merge[\"cons_12m\"] = merge[\"cons_12m\"].fillna(mean_cons_12m)\n",
    "merge[\"cons_gas_12m\"] = merge[\"cons_gas_12m\"].fillna(mean_cons_gas_12m)\n",
    "merge[\"forecast_cons_12m\"] = merge[\"forecast_cons_12m\"].fillna(mean_forecast_cons_12m)\n",
    "merge[\"imp_cons\"] = merge[\"imp_cons\"].fillna(mean_imp_cons)\n",
    "merge[\"margin_gross_pow_ele\"] = merge[\"margin_gross_pow_ele\"].fillna(mean_margin_gross_pow_ele)\n",
    "merge[\"margin_net_pow_ele\"] = merge[\"margin_net_pow_ele\"].fillna(mean_margin_net_pow_ele)\n",
    "merge[\"net_margin\"] = merge[\"net_margin\"].fillna(mean_net_margin)\n",
    "merge[\"forecast_meter_rent_12m\"] = merge[\"forecast_meter_rent_12m\"].fillna(mean_net_margin)\n",
    "merge[\"term\"] = merge[\"term\"].fillna(mean_net_margin)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                             0\n",
       "churn                          0\n",
       "activity_new                9545\n",
       "cons_12m                       0\n",
       "cons_gas_12m                   0\n",
       "date_activ                     0\n",
       "date_end                       2\n",
       "date_modif_prod              157\n",
       "date_renewal                  40\n",
       "forecast_cons_12m              0\n",
       "forecast_discount_energy       0\n",
       "forecast_meter_rent_12m        0\n",
       "forecast_price_energy_p1       0\n",
       "forecast_price_energy_p2       0\n",
       "forecast_price_pow_p1          0\n",
       "has_gas                        0\n",
       "imp_cons                       0\n",
       "margin_gross_pow_ele           0\n",
       "margin_net_pow_ele             0\n",
       "nb_prod_act                    0\n",
       "net_margin                     0\n",
       "pow_max                        0\n",
       "term                           0\n",
       "channel_epu                    0\n",
       "channel_ewp                    0\n",
       "channel_fix                    0\n",
       "channel_foo                    0\n",
       "channel_lmk                    0\n",
       "channel_sdd                    0\n",
       "channel_usi                    0\n",
       "origin_ewxe                    0\n",
       "origin_kamk                    0\n",
       "origin_ldks                    0\n",
       "origin_lxid                    0\n",
       "origin_usap                    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "merge.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id                 0\n",
       "price_date         0\n",
       "price_p1_var    1359\n",
       "price_p2_var    1359\n",
       "price_p3_var    1359\n",
       "price_p1_fix    1359\n",
       "price_p2_fix    1359\n",
       "price_p3_fix    1359\n",
       "dtype: int64"
      ]
     },
     "execution_count": 197,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "metadata": {},
   "outputs": [],
   "source": [
    "mean_price_p1_var= history_data[\"price_p1_var\"].mean()\n",
    "mean_price_p2_var= history_data[\"price_p2_var\"].mean()\n",
    "mean_price_p3_var= history_data[\"price_p3_var\"].mean()\n",
    "mean_price_p1_fix= history_data[\"price_p1_fix\"].mean()\n",
    "mean_price_p2_fix= history_data[\"price_p2_fix\"].mean()\n",
    "mean_price_p3_fix= history_data[\"price_p3_fix\"].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [],
   "source": [
    "history_data[\"price_p1_var\"] = history_data[\"price_p1_var\"].fillna(mean_price_p1_var)\n",
    "history_data[\"price_p2_var\"] = history_data[\"price_p2_var\"].fillna(mean_price_p2_var)\n",
    "history_data[\"price_p3_var\"] = history_data[\"price_p3_var\"].fillna(mean_price_p3_var)\n",
    "history_data[\"price_p1_fix\"] = history_data[\"price_p1_fix\"].fillna(mean_price_p1_fix)\n",
    "history_data[\"price_p2_fix\"] = history_data[\"price_p2_fix\"].fillna(mean_price_p2_fix)\n",
    "history_data[\"price_p3_fix\"] = history_data[\"price_p3_fix\"].fillna(mean_price_p3_fix)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 200,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "id              0\n",
       "price_date      0\n",
       "price_p1_var    0\n",
       "price_p2_var    0\n",
       "price_p3_var    0\n",
       "price_p1_fix    0\n",
       "price_p2_fix    0\n",
       "price_p3_fix    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 200,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "history_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 201,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>churn</th>\n",
       "      <th>activity_new</th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>date_activ</th>\n",
       "      <th>date_end</th>\n",
       "      <th>date_modif_prod</th>\n",
       "      <th>date_renewal</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>...</th>\n",
       "      <th>origin_ldks</th>\n",
       "      <th>origin_lxid</th>\n",
       "      <th>origin_usap</th>\n",
       "      <th>price_date</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>stayed</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>5.490346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>4.423595</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2015-01-01</td>\n",
       "      <td>0.106043</td>\n",
       "      <td>0.093474</td>\n",
       "      <td>0.067378</td>\n",
       "      <td>58.936774</td>\n",
       "      <td>36.344726</td>\n",
       "      <td>8.33426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>stayed</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>5.490346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>4.423595</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2015-02-01</td>\n",
       "      <td>0.106043</td>\n",
       "      <td>0.093474</td>\n",
       "      <td>0.067378</td>\n",
       "      <td>58.936774</td>\n",
       "      <td>36.344726</td>\n",
       "      <td>8.33426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>stayed</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>5.490346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>4.423595</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2015-03-01</td>\n",
       "      <td>0.106043</td>\n",
       "      <td>0.093474</td>\n",
       "      <td>0.067378</td>\n",
       "      <td>58.936774</td>\n",
       "      <td>36.344726</td>\n",
       "      <td>8.33426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>stayed</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>5.490346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>4.423595</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2015-04-01</td>\n",
       "      <td>0.106043</td>\n",
       "      <td>0.093474</td>\n",
       "      <td>0.067378</td>\n",
       "      <td>58.936774</td>\n",
       "      <td>36.344726</td>\n",
       "      <td>8.33426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>48ada52261e7cf58715202705a0451c9</td>\n",
       "      <td>stayed</td>\n",
       "      <td>esoiiifxdlbkcsluxmfuacbdckommixw</td>\n",
       "      <td>5.490346</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2016-11-01</td>\n",
       "      <td>2012-11-01</td>\n",
       "      <td>2015-11-01</td>\n",
       "      <td>4.423595</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2015-05-01</td>\n",
       "      <td>0.106043</td>\n",
       "      <td>0.093474</td>\n",
       "      <td>0.067378</td>\n",
       "      <td>58.936774</td>\n",
       "      <td>36.344726</td>\n",
       "      <td>8.33426</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 42 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                 id   churn                      activity_new  \\\n",
       "0  48ada52261e7cf58715202705a0451c9  stayed  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "1  48ada52261e7cf58715202705a0451c9  stayed  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "2  48ada52261e7cf58715202705a0451c9  stayed  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "3  48ada52261e7cf58715202705a0451c9  stayed  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "4  48ada52261e7cf58715202705a0451c9  stayed  esoiiifxdlbkcsluxmfuacbdckommixw   \n",
       "\n",
       "   cons_12m  cons_gas_12m  date_activ    date_end date_modif_prod  \\\n",
       "0  5.490346           0.0  2012-11-01  2016-11-01      2012-11-01   \n",
       "1  5.490346           0.0  2012-11-01  2016-11-01      2012-11-01   \n",
       "2  5.490346           0.0  2012-11-01  2016-11-01      2012-11-01   \n",
       "3  5.490346           0.0  2012-11-01  2016-11-01      2012-11-01   \n",
       "4  5.490346           0.0  2012-11-01  2016-11-01      2012-11-01   \n",
       "\n",
       "  date_renewal  forecast_cons_12m  ...  origin_ldks  origin_lxid  origin_usap  \\\n",
       "0   2015-11-01           4.423595  ...            1            0            0   \n",
       "1   2015-11-01           4.423595  ...            1            0            0   \n",
       "2   2015-11-01           4.423595  ...            1            0            0   \n",
       "3   2015-11-01           4.423595  ...            1            0            0   \n",
       "4   2015-11-01           4.423595  ...            1            0            0   \n",
       "\n",
       "   price_date  price_p1_var  price_p2_var  price_p3_var  price_p1_fix  \\\n",
       "0  2015-01-01      0.106043      0.093474      0.067378     58.936774   \n",
       "1  2015-02-01      0.106043      0.093474      0.067378     58.936774   \n",
       "2  2015-03-01      0.106043      0.093474      0.067378     58.936774   \n",
       "3  2015-04-01      0.106043      0.093474      0.067378     58.936774   \n",
       "4  2015-05-01      0.106043      0.093474      0.067378     58.936774   \n",
       "\n",
       "   price_p2_fix  price_p3_fix  \n",
       "0     36.344726       8.33426  \n",
       "1     36.344726       8.33426  \n",
       "2     36.344726       8.33426  \n",
       "3     36.344726       8.33426  \n",
       "4     36.344726       8.33426  \n",
       "\n",
       "[5 rows x 42 columns]"
      ]
     },
     "execution_count": 201,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smerge = pd.merge(merge, history_data, on='id')\n",
    "smerge.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dropping figures popped out again"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 202,
   "metadata": {},
   "outputs": [],
   "source": [
    "smerge= smerge.drop(['id','date_activ','activity_new','date_end','price_date','date_modif_prod','date_renewal'], axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Changing the churn column to '0' and '1'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 203,
   "metadata": {},
   "outputs": [],
   "source": [
    "smerge['churn']= smerge['churn'].replace([\"stayed\", \"churned\"],[1,0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 204,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "churn                       0\n",
       "cons_12m                    0\n",
       "cons_gas_12m                0\n",
       "forecast_cons_12m           0\n",
       "forecast_discount_energy    0\n",
       "forecast_meter_rent_12m     0\n",
       "forecast_price_energy_p1    0\n",
       "forecast_price_energy_p2    0\n",
       "forecast_price_pow_p1       0\n",
       "has_gas                     0\n",
       "imp_cons                    0\n",
       "margin_gross_pow_ele        0\n",
       "margin_net_pow_ele          0\n",
       "nb_prod_act                 0\n",
       "net_margin                  0\n",
       "pow_max                     0\n",
       "term                        0\n",
       "channel_epu                 0\n",
       "channel_ewp                 0\n",
       "channel_fix                 0\n",
       "channel_foo                 0\n",
       "channel_lmk                 0\n",
       "channel_sdd                 0\n",
       "channel_usi                 0\n",
       "origin_ewxe                 0\n",
       "origin_kamk                 0\n",
       "origin_ldks                 0\n",
       "origin_lxid                 0\n",
       "origin_usap                 0\n",
       "price_p1_var                0\n",
       "price_p2_var                0\n",
       "price_p3_var                0\n",
       "price_p1_fix                0\n",
       "price_p2_fix                0\n",
       "price_p3_fix                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 204,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smerge.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Checking figures in the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 205,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "churn: [1 0]\n",
      "cons_12m: [5.49034622 0.         3.6684791  ... 4.94025244 4.50881242 3.85877774]\n",
      "cons_gas_12m: [0.         4.73994399 6.18832877 ... 3.32776749 3.48244479 4.68070709]\n",
      "forecast_cons_12m: [4.42359481 0.         2.28091966 ... 2.28191924 1.30835095 2.88275784]\n",
      "forecast_discount_energy: [0.         0.29919048 1.49136169 1.39794001 1.462398   1.43136376\n",
      " 1.36172784 1.30103    1.04139269 0.77815125 1.41497335 1.70757018\n",
      " 1.25527251 1.11394335 1.38021124]\n",
      "forecast_meter_rent_12m: [2.55665221 0.4440448  1.23729234 ... 2.22044807 2.54406804 0.93399316]\n",
      "forecast_price_energy_p1: [0.095919   0.114481   0.145711   0.165794   0.146694   0.110083\n",
      " 0.1169     0.164775   0.166178   0.115174   0.115761   0.164637\n",
      " 0.167086   0.115237   0.162327   0.098925   0.168242   0.144902\n",
      " 0.164058   0.11286    0.118636   0.142417   0.13590059 0.160302\n",
      " 0.143478   0.144039   0.14317    0.198096   0.143166   0.116509\n",
      " 0.114604   0.11536    0.120372   0.147506   0.142881   0.145877\n",
      " 0.11691    0.100167   0.114025   0.0006     0.115744   0.144149\n",
      " 0.236794   0.186188   0.145884   0.113323   0.16304    0.112852\n",
      " 0.145541   0.108925   0.165793   0.142822   0.159815   0.142065\n",
      " 0.1017     0.182936   0.14531    0.144152   0.118646   0.15885\n",
      " 0.167093   0.112922   0.100528   0.114603   0.273963   0.115939\n",
      " 0.164057   0.110955   0.16464    0.164635   0.146348   0.19923\n",
      " 0.161165   0.144038   0.148299   0.161454   0.14398    0.110037\n",
      " 0.143227   0.145789   0.141434   0.141491   0.117496   0.161743\n",
      " 0.11634    0.14207    0.138847   0.144142   0.143575   0.14346\n",
      " 0.103919   0.141666   0.114782   0.114667   0.142819   0.237776\n",
      " 0.166191   0.162026   0.140621   0.145137   0.161936   0.115491\n",
      " 0.115182   0.116902   0.117486   0.162033   0.142174   0.142649\n",
      " 0.112352   0.114658   0.138305   0.092453   0.183037   0.097701\n",
      " 0.163619   0.11003    0.114588   0.198089   0.146343   0.173325\n",
      " 0.16695    0.094954   0.144558   0.142322   0.097949   0.110377\n",
      " 0.16463    0.115172   0.141083   0.114008   0.14612    0.165787\n",
      " 0.141783   0.144963   0.11633    0.111694   0.097493   0.157118\n",
      " 0.107659   0.161555   0.164448   0.165022   0.143459   0.114202\n",
      " 0.142592   0.116908   0.144058   0.145071   0.16059    0.140103\n",
      " 0.200722   0.143801   0.113509   0.097634   0.116329   0.113206\n",
      " 0.273957   0.115751   0.160012   0.147502   0.102772   0.11285\n",
      " 0.         0.157877   0.144328   0.166387   0.142321   0.146688\n",
      " 0.144631   0.164709   0.165214   0.116332   0.127896   0.095558\n",
      " 0.098023   0.229272   0.145774   0.164051   0.094486   0.162133\n",
      " 0.114586   0.186182   0.099095   0.157988   0.137553   0.165025\n",
      " 0.000901   0.160591   0.161459   0.142996   0.16329    0.162326\n",
      " 0.143805   0.140334   0.141624   0.10888    0.095343   0.140912\n",
      " 0.146154   0.144384   0.164197   0.141259   0.156539   0.111125\n",
      " 0.163479   0.111774   0.110422   0.146932   0.111701   0.11246\n",
      " 0.16088    0.140277   0.161747   0.162461   0.109966   0.117188\n",
      " 0.162388   0.163291   0.109227   0.111186   0.159144   0.116883\n",
      " 0.110847   0.11343    0.118068   0.113624   0.178156   0.141838\n",
      " 0.138598   0.111595   0.142648   0.118066   0.162905   0.199224\n",
      " 0.187593   0.110314   0.11727    0.118076   0.136329   0.142059\n",
      " 0.162904   0.272981   0.116331   0.176617   0.175496   0.161748\n",
      " 0.166699   0.144906   0.108817   0.159848   0.158662   0.114017\n",
      " 0.115173   0.163869   0.136979   0.15441    0.163483   0.159432\n",
      " 0.100629   0.160208   0.161169   0.188181   0.114088   0.095022\n",
      " 0.211178   0.100092   0.159433   0.096246   0.108532   0.097487\n",
      " 0.138765   0.144238   0.163618   0.139209   0.110269   0.164039\n",
      " 0.145677   0.142416   0.109505   0.144731   0.162711   0.111195\n",
      " 0.195763   0.158949   0.161155   0.245347   0.110615   0.161746\n",
      " 0.143795   0.102241   0.152932   0.16928    0.146123   0.142591\n",
      " 0.109806   0.182926   0.115529   0.167095   0.143156   0.145195\n",
      " 0.148251   0.1712936  0.165219   0.159722   0.145787   0.155769\n",
      " 0.20774    0.118638   0.170262   0.228671   0.115215   0.245926\n",
      " 0.13744    0.111702   0.194988   0.146327   0.114594   0.145342\n",
      " 0.161365   0.145794   0.107955   0.106523   0.138773   0.198077\n",
      " 0.116339   0.099462   0.099997   0.15384    0.119802   0.14126\n",
      " 0.158276   0.109397   0.111194   0.114015   0.162707   0.129985\n",
      " 0.143253   0.161168   0.157696   0.114596   0.113215   0.202961\n",
      " 0.161799   0.127409   0.113437   0.195964   0.110385   0.158566\n",
      " 0.109245   0.176827   0.112858   0.111888   0.137732   0.11228\n",
      " 0.163482   0.165021   0.097138   0.139176   0.152596   0.118065\n",
      " 0.09931    0.130038   0.115753   0.096952   0.19597    0.114593\n",
      " 0.142245   0.109975   0.142995   0.163868   0.095597   0.146342\n",
      " 0.18292    0.257944   0.141087   0.198656   0.098805   0.186186\n",
      " 0.116885   0.113271   0.138273   0.162141   0.15352    0.156727\n",
      " 0.113447   0.139751   0.126838   0.112753   0.096415   0.146699\n",
      " 0.164061   0.211278   0.112468   0.165354   0.16579    0.168243\n",
      " 0.110616   0.11293    0.112529   0.113331   0.119222   0.10385\n",
      " 0.155236   0.11084    0.110565   0.210689   0.147508   0.0947\n",
      " 0.099241   0.115232   0.144617   0.173505   0.115157   0.135995\n",
      " 0.143152   0.143573   0.116491   0.11726    0.137152   0.112274\n",
      " 0.155382   0.160487   0.138769   0.158145   0.137557   0.155243\n",
      " 0.13802    0.140508   0.12777    0.236291   0.208313   0.099556\n",
      " 0.165933   0.166376   0.140682   0.146355   0.158854   0.165427\n",
      " 0.112272   0.120357   0.118644   0.159819   0.157697   0.162322\n",
      " 0.13993    0.164628   0.154332   0.117488   0.165605   0.111311\n",
      " 0.199834   0.160489   0.098029   0.09839    0.154393   0.111587\n",
      " 0.140855   0.130077   0.114595   0.099636   0.135417   0.143601\n",
      " 0.173841   0.111124   0.166862   0.098564   0.165018   0.102729\n",
      " 0.157504   0.113439   0.109683   0.111123   0.145633   0.138851\n",
      " 0.157894   0.16403    0.137153   0.160977   0.133681   0.137615\n",
      " 0.162325   0.113046   0.170256   0.164556   0.108238   0.164447\n",
      " 0.15654    0.181783   0.106913   0.160011   0.203167   0.165353\n",
      " 0.134801   0.099101   0.147509   0.165797   0.272972   0.136536\n",
      " 0.134902   0.13831    0.110544   0.11683    0.13408    0.113508\n",
      " 0.101706   0.167541   0.1671     0.098485   0.139755   0.21068\n",
      " 0.112289   0.111773   0.097854   0.115311   0.140986   0.158018\n",
      " 0.165137   0.113438   0.13293    0.126753   0.166184   0.112867\n",
      " 0.153693   0.11648    0.108879   0.1981     0.10969    0.112281\n",
      " 0.097318   0.095896   0.160786   0.141742   0.163484   0.143748\n",
      " 0.14336    0.109459   0.116918   0.158855   0.197522   0.097616\n",
      " 0.13538    0.109387   0.141743   0.139177   0.138299   0.10117\n",
      " 0.159241   0.164444   0.161554   0.211224   0.115665   0.110553\n",
      " 0.164437   0.173831   0.160592   0.160397   0.108533   0.14316\n",
      " 0.144491   0.109967   0.140909   0.194979   0.167089   0.141164\n",
      " 0.14149    0.116486   0.105142   0.153646   0.099637   0.102176\n",
      " 0.127456   0.096095   0.11399    0.158138   0.09902    0.160013\n",
      " 0.127906   0.117054   0.22754    0.16117    0.24592    0.165026\n",
      " 0.109396   0.112279   0.169214   0.157801   0.155834   0.095061\n",
      " 0.139524   0.093206   0.109807   0.180689   0.110928   0.164062\n",
      " 0.144636   0.1582762  0.10169    0.11026    0.096347   0.236785\n",
      " 0.142244   0.097639   0.098248   0.196942   0.142813   0.146353\n",
      " 0.099568   0.109965   0.114419   0.146368   0.176611   0.273807\n",
      " 0.134838   0.195185   0.16522    0.116887   0.115201   0.164641  ]\n",
      "forecast_price_energy_p2: [0.088347   0.098142   0.         0.087899   0.093746   0.100015\n",
      " 0.086131   0.087538   0.098837   0.099419   0.087381   0.088444\n",
      " 0.100123   0.084428   0.09135    0.089602   0.086163   0.096521\n",
      " 0.10175    0.05295074 0.082403   0.101397   0.098262   0.100243\n",
      " 0.103487   0.100572   0.091892   0.097683   0.098858   0.096984\n",
      " 0.084395   0.095965   0.092586   0.088539   0.081173   0.092659\n",
      " 0.102308   0.081596   0.088449   0.09781    0.092955   0.098261\n",
      " 0.100823   0.086803   0.095842   0.087382   0.086741   0.095969\n",
      " 0.083909   0.125137   0.084198   0.09492    0.101155   0.083849\n",
      " 0.099998   0.095644   0.099665   0.099548   0.087548   0.084143\n",
      " 0.136336   0.097963   0.098841   0.100597   0.084138   0.097235\n",
      " 0.099545   0.086393   0.089427   0.084973   0.094916   0.097701\n",
      " 0.146676   0.089695   0.088907   0.095264   0.086746   0.098282\n",
      " 0.097123   0.087903   0.128444   0.099441   0.094808   0.089216\n",
      " 0.079861   0.091318   0.08291    0.085803   0.08638    0.099086\n",
      " 0.100019   0.083332   0.098391   0.090062   0.099439   0.093991\n",
      " 0.098862   0.082114   0.093731   0.135732   0.10002    0.101255\n",
      " 0.102435   0.087961   0.087283   0.089749   0.116714   0.086168\n",
      " 0.086212   0.083488   0.090821   0.080089   0.083331   0.083561\n",
      " 0.084645   0.085068   0.098283   0.093764   0.087069   0.082425\n",
      " 0.085553   0.100596   0.079281   0.094787   0.086225   0.096655\n",
      " 0.094032   0.094812   0.097346   0.082981   0.08449    0.083816\n",
      " 0.093629   0.099017   0.100124   0.09411    0.096074   0.081246\n",
      " 0.100009   0.093905   0.096543   0.101178   0.098508   0.095539\n",
      " 0.095252   0.101176   0.085006   0.110352   0.093976   0.100879\n",
      " 0.101734   0.085646   0.097603   0.08385    0.101437   0.092476\n",
      " 0.072561   0.080016   0.097126   0.098284   0.085224   0.130527\n",
      " 0.085584   0.082175   0.091587   0.134604   0.08327    0.110286\n",
      " 0.098969   0.086748   0.107068   0.091051   0.081535   0.088671\n",
      " 0.093415   0.089213   0.12802    0.095152   0.125383   0.093167\n",
      " 0.082754   0.084067   0.096077   0.084489   0.079771   0.083916\n",
      " 0.084427   0.168092   0.095499   0.093198   0.125764   0.130525\n",
      " 0.094688   0.099138   0.088463   0.080123   0.08796    0.081824\n",
      " 0.077124   0.130486   0.101752   0.115789   0.100117   0.168032\n",
      " 0.085552   0.094813   0.097704   0.135761   0.092838   0.097482\n",
      " 0.099997   0.098971   0.091887   0.092422   0.129951   0.102912\n",
      " 0.082174   0.081018   0.093055   0.096078   0.084066   0.097679\n",
      " 0.082752   0.11798    0.083911   0.080439   0.097706   0.094022\n",
      " 0.082004   0.109058   0.096547   0.095267   0.080667   0.091858\n",
      " 0.094258   0.096772   0.098861   0.095943   0.087232   0.091035\n",
      " 0.111642   0.088678   0.093633   0.088025   0.080377   0.180691\n",
      " 0.085067   0.089617   0.096951   0.086064   0.134578   0.097105\n",
      " 0.108484   0.09641    0.088141   0.086804   0.107406   0.097351\n",
      " 0.086709   0.088553   0.089611   0.0955     0.097812   0.097233\n",
      " 0.09673    0.096988   0.102333   0.096278   0.095726   0.08613\n",
      " 0.093638   0.107422   0.086426   0.093076   0.091669   0.097705\n",
      " 0.091055   0.098834   0.086814   0.101395   0.10032    0.195975\n",
      " 0.095387   0.095498   0.078125   0.109399   0.116454   0.13043\n",
      " 0.090516   0.087287   0.086381   0.089118   0.083489   0.080956\n",
      " 0.086027   0.103484   0.101755   0.081174   0.079799   0.097125\n",
      " 0.100598   0.100018   0.08696    0.096195   0.086226   0.089752\n",
      " 0.090815   0.13052    0.095249   0.11171    0.091359   0.094233\n",
      " 0.089624   0.090287   0.086386   0.093709   0.078859   0.094569\n",
      " 0.125362   0.13229    0.082331   0.097929   0.086423   0.091897\n",
      " 0.078641   0.098863   0.091796   0.082113   0.090824   0.08854\n",
      " 0.117962   0.093655   0.095066   0.115688   0.098392   0.092662\n",
      " 0.134512   0.095391   0.088456   0.089444   0.107428   0.095947\n",
      " 0.096656   0.090278   0.09798    0.13608    0.087645   0.096548\n",
      " 0.114534   0.087553   0.096526   0.101385   0.093763   0.088454\n",
      " 0.094572   0.09539    0.079221   0.089743   0.088337   0.135182\n",
      " 0.085585   0.094342   0.100576   0.090057   0.092498   0.092126\n",
      " 0.080595   0.085802   0.107378   0.106594   0.094212   0.085807\n",
      " 0.09138    0.081016   0.097814   0.081752   0.093416   0.088445\n",
      " 0.130522   0.10139    0.080438   0.095673   0.076592   0.09136\n",
      " 0.092867   0.109074   0.08782    0.097117   0.089979   0.082753\n",
      " 0.09393    0.114979   0.168036   0.086747   0.080127   0.08749\n",
      " 0.084928   0.09469    0.102556   0.095832   0.086164   0.0803766\n",
      " 0.092657   0.095146   0.088776   0.090065   0.089031   0.091994\n",
      " 0.092655   0.087321   0.100564   0.100096   0.086742  ]\n",
      "forecast_price_pow_p1: [58.99595196 40.606701   44.31137796 45.30837756 46.30537836 43.5334958\n",
      " 41.1052014  45.80687796 40.9390266   0.         47.80087836 45.81137796\n",
      " 59.26637796 41.2713642  40.728885   44.44470996 59.17346796 45.31137756\n",
      " 46.31137836 46.70417796 37.929294   46.55462196 47.30237796 53.28437796\n",
      " 41.7288846  46.30687836 41.2733682  41.7698634  41.6037006  47.30687796\n",
      " 42.69342996 39.02200704 -0.122184   46.80387756 35.55576792 45.94470996\n",
      " 44.30687796 59.05128396 41.4375258  41.2718682  32.583108   41.603697\n",
      " 41.1067014  41.404305   41.3955522  46.80687756 59.44470996]\n",
      "has_gas: [0 1]\n",
      "imp_cons: [2.92054072 0.         3.02258095 ... 3.24540408 1.83270047 1.68106024]\n",
      "margin_gross_pow_ele: [1.2988555  1.42226145 1.24004977 ... 1.81960973 1.49317912 1.04375513]\n",
      "margin_net_pow_ele: [1.2991168  1.42226145 1.24004977 ... 1.81960973 1.49317912 1.04375513]\n",
      "nb_prod_act: [0.30103    0.47712125 0.60205999 0.69897    1.51851394 0.77815125\n",
      " 1.         0.84509804 1.50514998 0.95424251 1.04139269]\n",
      "net_margin: [3.23888877 2.83250253 1.29863478 ... 2.58293789 1.3300077  0.29225607]\n",
      "pow_max: [2.25767857 1.64980201 1.17026172 1.17190189 1.15228834 1.88081359\n",
      " 1.31806333 1.20411998 1.43775056 1.51188336 1.09691001 1.05659998\n",
      " 1.24303805 1.04139269 1.09342169 1.41497335 1.20414713 1.14612804\n",
      " 1.5563025  1.07918125 1.26294917 1.38201704 1.13033377 1.20439133\n",
      " 1.47712125 1.49762065 1.53147892 1.44090908 1.17172645 1.44106641\n",
      " 1.17201881 1.72835378 1.69019608 1.32221929 2.00432137 1.31638975\n",
      " 1.24054925 1.61278386 1.26126287 1.33815756 1.48713838 1.58308537\n",
      " 1.74818803 1.05499586 1.19005142 1.33645973 1.70757018 1.34321159\n",
      " 1.15533604 2.27415785 1.25527251 1.1714339  0.64836001 1.09704897\n",
      " 1.30103    0.73239376 1.05690485 1.26007139 1.43616265 1.15075644\n",
      " 0.88081359 1.75587486 1.33041377 1.58782317 1.23044892 1.64933486\n",
      " 1.36172784 1.161368   1.51851394 0.63346846 1.68393814 1.20951501\n",
      " 1.05652372 1.81291336 2.22271647 1.3345368  1.45807857 1.20682588\n",
      " 1.623766   1.28802554 1.26292547 1.81954394 1.11394335 1.40053799\n",
      " 1.90848502 1.6690378  1.33243846 1.6294096  1.14921911 1.50745106\n",
      " 1.30211438 1.64978255 1.37416156 1.19865709 1.15118592 1.04921802\n",
      " 1.56820172 1.46982202 1.98227123 1.46089784 1.34143452 1.50582803\n",
      " 2.01703334 1.54406804 2.44870632 2.14921911 2.         1.70329138\n",
      " 1.43136376 1.1744378  1.57921178 1.2121876  1.86923172 1.78532984\n",
      " 1.49136169 1.86159414 1.55388303 1.31597035 1.30168095 1.55022835\n",
      " 1.62787769 1.31175386 1.462398   1.39794001 1.31680875 1.21005085\n",
      " 1.1903317  1.62838893 1.1383027  1.79934055 1.31643167 2.07554696\n",
      " 1.45484486 1.0941216  1.64345268 1.38039216 1.41659059 1.40224418\n",
      " 1.30749604 0.64972419 1.60670374 2.30319606 1.8260748  1.3808622\n",
      " 1.1123033  1.38021124 1.2380461  1.25042    1.29116898 1.26245109\n",
      " 1.38560627 2.65513843 0.79211141 1.66275783 1.08990511 1.24154648\n",
      " 1.094541   1.22479196 1.5797836  1.31005574 2.24551267 1.40208935\n",
      " 1.05621858 1.2287852  1.0374265  1.50242712 1.34242268 1.95904139\n",
      " 1.85125835 1.45636603 1.18469143 1.11991541 1.44715803 1.55194988\n",
      " 1.26363607 2.11058971 1.1172713  1.64972419 1.42488164 1.35602586\n",
      " 1.62920566 1.52955867 0.74818803 1.42942926 1.21484385 1.19589965\n",
      " 1.59891082 1.45803319 1.89320675 1.61878002 1.50754555 1.31691344\n",
      " 1.32054092 2.13033377 1.21748394 1.06818586 1.27485032 1.78175537\n",
      " 1.17609126 1.56714405 1.32124621 1.53031498 2.04921802 1.94448267\n",
      " 1.40226138 2.28330123 1.53313629 1.70671778 1.33805788 1.38012075\n",
      " 1.80617997 1.33845649 1.68124124 1.26717173 1.2583978  1.2787536\n",
      " 1.59106461 2.02897771 1.673942   1.5519377  1.99563519 2.41664051\n",
      " 1.3161801  1.75204845 0.69897    1.68930886 1.46097297 1.54319859\n",
      " 1.78103694 1.82988245 1.10720997 1.2461784  1.96848295 1.73679475\n",
      " 1.1271048  1.25767857 1.20817253 2.07188201 1.65321251 1.21979403\n",
      " 1.34713478 1.17318627 1.09447113 1.30427505 1.4578819  2.17897695\n",
      " 2.07081336 1.5871495  1.93951925 1.34830486 1.8920946  2.34439227\n",
      " 0.95664858 1.92168648 1.50514998 1.28636664 1.62757066 0.81291336\n",
      " 1.64787177 1.8573325  1.15044941 1.60852603 1.68601029 1.64591328\n",
      " 1.41161971 1.05307844 1.08224665 1.36002509 1.21063951 1.92829341\n",
      " 1.48784512 1.77851301 1.20763437 1.32551566 1.33825723 1.55145\n",
      " 1.06145248 1.23299611 1.94939001 1.06069784 1.07554696 1.76162718\n",
      " 1.43659196 1.11226977 1.15594302 1.87273883 1.24378192 1.46314614\n",
      " 1.05323215 2.06445799 1.53794496 1.91907809 1.31428866 1.40823997\n",
      " 1.89762709 1.02710487 1.62024019 0.84509804 1.28780173 1.22492135\n",
      " 2.10037055 1.84509804 2.39967372 1.63346846 1.7750276  1.95055956\n",
      " 1.24674471 2.20682588 1.65417654 1.21457895 1.29666519 1.47129171\n",
      " 1.4345689  1.2764618  1.39093511 1.37821615 2.02530587 1.06295783\n",
      " 1.8243862  1.67530164 1.5298152  1.21510858 1.54654266 0.90308999\n",
      " 1.24189497 1.46059719 0.89916364 1.6528263  1.28566981 1.27554169\n",
      " 1.63848926 1.17193112 1.86332286 1.20139712 1.65436909 1.44870632\n",
      " 1.64147411 1.32014629 1.69897    1.43584437 1.24551267 1.65925047\n",
      " 1.74036269 1.38969755 1.93449845 2.19589965 1.1563977  1.60745502\n",
      " 1.26481782 2.10380372 1.48572143 1.75296987 0.99122608 1.37235958\n",
      " 1.28757781 1.40222698 1.77085201 1.92427929 1.72427587 1.08278537\n",
      " 1.55870857 1.35305024 1.7084209  1.71600334 1.41647408 1.81157501\n",
      " 1.42061577 1.20940777 2.08278537 1.73078228 1.24214372 1.34439227\n",
      " 1.39619935 1.39967372 2.12057393 1.52504481 1.05880549 1.77815125\n",
      " 1.35640833 0.77815125 1.67897338 1.56229286 1.48429984 1.46523409\n",
      " 1.0808068  1.30728205 1.5112147  1.20723031 1.3381775  1.38542751\n",
      " 1.62727366 2.24054925 1.33813763 1.23172438 1.39216915 1.72884057\n",
      " 1.22840036 1.90249242 1.75143308 1.67209786 1.3283796  1.23350376\n",
      " 1.61783875 1.72742738 1.28555731 2.29003461 1.35218252 1.24526584\n",
      " 0.95424251 1.53071184 1.34525607 1.37930552 1.64806713 1.13672057\n",
      " 2.01283722 1.55918819 2.27035037 1.74678983 1.94200805 1.52218332\n",
      " 1.86272753 1.60681115 1.4847268  0.77085201 1.39128805 1.33765889\n",
      " 1.26951294 2.40823997 1.58444431 1.70243054 2.05690485 1.32159843\n",
      " 1.39759243 1.20574554 1.10037055 1.47092475 1.84695533 1.5301997\n",
      " 1.62324929 1.87215627 2.36361198 1.25115134 1.60268926 2.04532298\n",
      " 0.89762709 1.67577834 1.13417711 1.22875956 1.94250411 1.95424251\n",
      " 1.52348633 1.80601029 1.45757915 1.35621713 1.92941893 1.23527588\n",
      " 1.30189772 1.64836001 1.44793287 1.28936595 1.88138466 1.2688119\n",
      " 1.37730625 1.75097098 1.09829754 1.309843   1.84929654 2.04119523\n",
      " 1.73239376 1.8876173  1.84683175 1.36492603 2.1172713  1.28103337\n",
      " 1.50758604 1.0733517  1.64929591 1.48855072 1.39562339 1.76342799\n",
      " 1.15645829 1.27346427 2.22010809 1.60205999 0.82930377 1.33925263\n",
      " 1.37657696 1.30963017 1.57403127 1.30319606 1.38685553 1.4785665\n",
      " 1.64640373 1.4998245  1.91803034 1.24179543 1.37106786 1.90248155\n",
      " 1.67200545 1.27600199 1.93701611 1.08062649 1.08429023 1.25940273\n",
      " 1.22865696 1.22271647 1.42618583 1.24117279 1.63470897 1.28958895\n",
      " 1.89047691 1.55743501 1.13353891 1.32935719 1.05614226 2.35410844\n",
      " 2.1430148  1.29446623 1.62746827 2.05014766 1.21642983 1.82930377\n",
      " 1.52860822 1.86774436 1.27991778 0.89872518 1.26764098 1.60086404\n",
      " 0.65321251 2.28103337 1.52800347 1.65021035 2.24797327 1.2884728\n",
      " 1.5229656  1.20493352 1.88649073 1.17440873 1.32035403 1.06445799\n",
      " 2.0374265  2.04139269 1.40654018 1.67824515 1.45530177 1.50215389\n",
      " 1.36361198 1.37767044 1.44466923 1.27692113 1.65098709 1.95630773\n",
      " 1.35974065 1.79920266 2.48572143 1.30958759 1.13703745 1.54282543\n",
      " 0.30103    1.07188201 1.25695815 1.42324587 0.93951925 1.195069\n",
      " 1.45863785 1.63948649 1.74562122 1.42667389 1.6580114  1.25454808\n",
      " 1.52244423 1.94076544 1.48543748 1.43933269 1.31470969 1.20790353\n",
      " 1.23149508 1.57042618 1.27943879 1.31260044 1.08635983 1.21974166\n",
      " 1.18752072 1.84129689 1.16731733 1.29819787 1.21058602 2.38201704\n",
      " 1.41398671 2.05307844 2.14612804 2.06818586 1.23613402 1.27253778\n",
      " 1.64246452 1.47741069 1.38916608 1.15836249 1.40380661 1.87122256\n",
      " 1.93831954 1.05115252 1.56300619 1.82412583 1.80955971 2.2787536\n",
      " 2.29885308 1.76937733 2.1931246  1.70552161 1.57170883 1.4659031\n",
      " 1.62603225 1.11025292 2.06069784 1.1532049  1.18184359 1.18497519\n",
      " 1.47055749 1.27852496 1.24919836 1.64982146 1.20609694 1.30513632\n",
      " 1.07003787 1.63528264 1.10105935 1.2422929  1.29885308 1.67302091\n",
      " 1.62634037 1.82151353 1.61283682 1.80277373 1.55412558 1.55530005\n",
      " 1.49057645 2.51982799 1.36921586 2.21748394 1.31132995 1.16286299\n",
      " 1.48000694 1.44451321 1.83884909 1.03582983 1.24748226 2.50650503\n",
      " 1.55966728 1.20417427 1.46686762 1.12629379 1.59703666 1.05153839\n",
      " 1.90145832 1.10653085 1.21537315 1.23658764 1.53468594 1.32056168\n",
      " 1.10380372 1.39445168 1.7035493  1.40174508 1.1430148  1.23646168\n",
      " 1.42693396 1.43376983 1.21272015 1.53211712 1.60638137 1.22530928\n",
      " 1.08813609 1.32715451 1.65137494 1.610873   1.66181269 1.34478512\n",
      " 1.5171959  2.45744284 1.24846372 1.67821782 1.59173224 1.28171497\n",
      " 1.98677173 1.08206693 1.51108085 1.22401481 1.41912931 1.47041049\n",
      " 1.47085132 1.44200916 1.49831055 2.39445168 1.49692965 2.13353891\n",
      " 1.34733002 1.36436335 1.27989498 1.92788341 1.14238947 1.37857958\n",
      " 1.60390183 1.30578115 1.41995575 1.1048284  1.08159931 2.1271048\n",
      " 1.06182931 1.76297849 1.24993176 1.40483372 1.3287872  1.42569721\n",
      " 1.88422877 1.31693437 1.76551954 1.41657394 1.41830129 1.05384643\n",
      " 1.15563963 1.57356777 1.9330315  1.20736504 1.36567514 1.83695674\n",
      " 2.08990511 1.59217676 1.53275438 1.21245396 1.94758075 1.3079237\n",
      " 1.24142195 1.26422735 1.25863728 1.58206336 1.77305469 1.45806345\n",
      " 1.8145073  1.90308999 1.46657107 1.35506821 1.40140054 1.80002936\n",
      " 1.45210858 1.35198946 2.5575072  1.10002573 1.31386722 2.4785665\n",
      " 2.18582536 1.34635297 2.19556758 1.15106325 1.61898892 1.68681495\n",
      " 1.61097938 1.30856441 1.4364807  1.5965971  1.25236751 2.29225607\n",
      " 2.12483015 1.72271617 1.4852244  2.31386722 1.29732271 1.68574174\n",
      " 1.42651126 1.8350561  1.50785587 1.49713706 1.76170237 1.89602991\n",
      " 1.80177404 1.45589504 1.80976167 1.70346334 1.1319393  1.36153897\n",
      " 1.18355453 1.20425568 1.84684411 1.33745926 1.47784448 1.71957986\n",
      " 2.46686762 1.88246761 1.31889771 1.61105383 1.83569057 1.29003461\n",
      " 1.51995918 1.380573   1.15457612 1.23552845 1.72908376 1.30535137\n",
      " 1.35983548 1.71957157 2.07408469 2.03209471 1.25163822 1.39462676\n",
      " 2.17609126 1.39741854 1.67255963 1.61384182 1.64884771 1.6562899\n",
      " 1.77158748 1.28981184 1.47158505 1.69108149 1.29644579 2.06179164\n",
      " 1.90531006 1.31196566 1.49927458 2.28555731 1.75499013 1.26517172\n",
      " 1.21306596 1.49803472 1.38898879 2.26951294 2.16731733 1.23325001\n",
      " 1.4456042  1.87794695 1.24002478 1.23829707 1.22219605 1.11058971\n",
      " 1.12303453 1.75966784 1.8483123  1.93298082 1.2509077  1.45818444\n",
      " 1.7512791  1.60184279 2.13672057 1.62013605 1.99804126 2.04727487\n",
      " 1.35314655 1.25309559 1.82295224 1.33965016 1.52582195 1.18585367\n",
      " 1.80393485 1.30492116 1.29902763 1.23019338 2.52121656 1.70156799\n",
      " 2.69983773 1.83250891 1.30663944 1.62805158 1.13893394 1.34419572\n",
      " 1.35793485 1.69088686 2.25042    2.54032947]\n",
      "term: [ 4.          3.          7.          6.          5.         11.\n",
      "  8.         12.          9.         10.         13.         16.\n",
      "  2.04839367  1.          2.        ]\n",
      "channel_epu: [0 1]\n",
      "channel_ewp: [0 1]\n",
      "channel_fix: [0 1]\n",
      "channel_foo: [0 1]\n",
      "channel_lmk: [1 0]\n",
      "channel_sdd: [0 1]\n",
      "channel_usi: [0 1]\n",
      "origin_ewxe: [0 1]\n",
      "origin_kamk: [0 1]\n",
      "origin_ldks: [1 0]\n",
      "origin_lxid: [0 1]\n",
      "origin_usap: [0 1]\n",
      "price_p1_var: [0.106043 0.100248 0.098091 ... 0.199886 0.087762 0.125244]\n",
      "price_p2_var: [0.093474 0.090359 0.089625 ... 0.101875 0.081756 0.103106]\n",
      "price_p3_var: [0.067378   0.065736   0.071536   0.073873   0.073819   0.03071226\n",
      " 0.         0.068646   0.069463   0.069409   0.070232   0.073773\n",
      " 0.073719   0.07457    0.074516   0.071233   0.073555   0.072394\n",
      " 0.07515    0.075096   0.071174   0.07112    0.074205   0.069519\n",
      " 0.067903   0.068746   0.06944    0.072249   0.072195   0.073487\n",
      " 0.073433   0.074278   0.075514   0.07546    0.072974   0.075731\n",
      " 0.075677   0.075482   0.069645   0.07399    0.073936   0.074934\n",
      " 0.07488    0.074299   0.074321   0.077255   0.077201   0.07327\n",
      " 0.076311   0.076257   0.095375   0.07099    0.07037    0.070317\n",
      " 0.073355   0.069076   0.072612   0.072558   0.073193   0.073139\n",
      " 0.075221   0.075167   0.076955   0.076901   0.072331   0.072277\n",
      " 0.072659   0.071665   0.074567   0.065954   0.069386   0.073478\n",
      " 0.073424   0.066565   0.068038   0.068302   0.068248   0.071482\n",
      " 0.068846   0.070864   0.075004   0.078052   0.077998   0.07073\n",
      " 0.071884   0.071661   0.070359   0.072682   0.073935   0.075736\n",
      " 0.07348    0.073426   0.074902   0.070596   0.070542   0.06991\n",
      " 0.069378   0.09872    0.101037   0.091448   0.091394   0.073989\n",
      " 0.073838   0.076891   0.076837   0.068592   0.072826   0.071739\n",
      " 0.071685   0.074633   0.074579   0.07604    0.072975   0.070505\n",
      " 0.073216   0.069223   0.070381   0.071085   0.067489   0.074477\n",
      " 0.074752   0.072322   0.072268   0.071978   0.071692   0.073625\n",
      " 0.071451   0.071397   0.072713   0.074353   0.073261   0.074135\n",
      " 0.074081   0.070654   0.0706     0.072104   0.098898   0.098844\n",
      " 0.099232   0.069947   0.069893   0.075158   0.07081    0.06913\n",
      " 0.070949   0.069925   0.071304   0.073624   0.073501   0.065678\n",
      " 0.071956   0.073192   0.073138   0.069344   0.068053   0.068517\n",
      " 0.067342   0.07087    0.070816   0.068982   0.066186   0.103142\n",
      " 0.103151   0.103097   0.103502   0.067057   0.064768   0.0729\n",
      " 0.072846   0.066705   0.067102   0.06933    0.073741   0.073263\n",
      " 0.072032   0.076315   0.071234   0.071814   0.07176    0.096428\n",
      " 0.096806   0.066912   0.069492   0.07495    0.06855    0.068496\n",
      " 0.068044   0.067118   0.067065   0.066971   0.073843   0.06966\n",
      " 0.074424   0.074879   0.07316    0.072464   0.068984   0.067456\n",
      " 0.07059    0.065392   0.067887   0.067833   0.069067   0.066595\n",
      " 0.068912   0.099286   0.074417   0.069918   0.067257   0.06971\n",
      " 0.069656   0.072893   0.072839   0.098101   0.073945   0.072896\n",
      " 0.074233   0.073643   0.072109   0.098311   0.098257   0.087021\n",
      " 0.085296   0.07234    0.066367   0.068589   0.06884    0.070534\n",
      " 0.069649   0.073785   0.074662   0.071378   0.073409   0.068448\n",
      " 0.065292   0.074716   0.072979   0.075296   0.07437    0.069915\n",
      " 0.070045   0.101027   0.071179   0.0688     0.068489   0.068068\n",
      " 0.070508   0.070454   0.075212   0.068222   0.066447   0.066152\n",
      " 0.069169   0.067921   0.073117   0.069795   0.070237   0.091564\n",
      " 0.093881   0.093827   0.07002    0.069966   0.070235   0.070181\n",
      " 0.071419   0.072245   0.072845   0.068014   0.069347   0.069293\n",
      " 0.070895   0.076114   0.071307   0.071634   0.071044   0.069075\n",
      " 0.068169   0.070143   0.072921   0.071939   0.076621   0.065862\n",
      " 0.065808   0.068799   0.066764   0.07029    0.070236   0.074634\n",
      " 0.07458    0.074053   0.073999   0.072683   0.08626    0.066442\n",
      " 0.071527   0.067335   0.070972   0.070918   0.069644   0.072535\n",
      " 0.069425   0.069371   0.069641   0.077472   0.077418   0.070653\n",
      " 0.071005   0.068317   0.072899   0.085245   0.072729   0.066324\n",
      " 0.068186   0.068132   0.070871   0.066445   0.066391   0.094195\n",
      " 0.069956   0.066982   0.069789   0.097545   0.097491   0.073473\n",
      " 0.073419   0.072628   0.073044   0.065575   0.065829   0.072326\n",
      " 0.072272   0.07406    0.074006   0.06724    0.069252   0.073112\n",
      " 0.07579    0.067368   0.066059   0.067472   0.08568    0.074056\n",
      " 0.074002   0.071744   0.07169    0.071265   0.07013    0.068767\n",
      " 0.068713   0.069214   0.068863   0.068809   0.096576   0.096522\n",
      " 0.090831   0.068829   0.068883   0.067388   0.074269   0.06791\n",
      " 0.065428   0.070817   0.065125   0.067603   0.069955   0.071115\n",
      " 0.067776   0.094249   0.069655   0.070073   0.072312   0.072258\n",
      " 0.07001    0.06879    0.073987   0.070948   0.097327   0.07306831\n",
      " 0.083938   0.068749   0.070223   0.071452   0.071398   0.098706\n",
      " 0.098652   0.067123   0.073406   0.077552   0.073664   0.075702\n",
      " 0.067111   0.07573    0.075676   0.070581   0.098142   0.093669\n",
      " 0.093615   0.074641   0.074587   0.070327   0.067027   0.07269\n",
      " 0.092853   0.089164   0.070953   0.067911   0.067857   0.078014\n",
      " 0.07796    0.069924   0.07258    0.072051   0.065338   0.07292\n",
      " 0.069071   0.068332   0.072102   0.063313   0.063259   0.071668\n",
      " 0.071614   0.063679   0.065432   0.097718   0.084413   0.084359\n",
      " 0.080304   0.097737   0.097683   0.069113   0.067518   0.067765\n",
      " 0.071274   0.068488   0.068801   0.06907    0.069016   0.068059\n",
      " 0.071034   0.067333   0.069695   0.065414   0.091932   0.070189\n",
      " 0.068855   0.06993    0.07225    0.07167    0.065635   0.066211\n",
      " 0.068619   0.06494    0.095996   0.095942   0.09694    0.069793\n",
      " 0.069739   0.072775   0.077373   0.077684   0.072132   0.072078\n",
      " 0.065167   0.067025   0.067227   0.076368   0.067779   0.06502\n",
      " 0.068548   0.068494   0.069951   0.07142    0.069377   0.072907\n",
      " 0.072853   0.069563   0.071111   0.071166   0.071112   0.07217394\n",
      " 0.071801   0.098889   0.092209   0.090428   0.086782   0.072712\n",
      " 0.072658   0.075408   0.073692   0.069794   0.094753   0.097315\n",
      " 0.065282   0.065228   0.065912   0.065507   0.066489   0.070956\n",
      " 0.072196   0.069069   0.06778    0.073207   0.068275   0.094572\n",
      " 0.068617   0.067171   0.071529   0.068278   0.072829   0.080575\n",
      " 0.080521   0.078199   0.069209   0.069155   0.070584   0.068661\n",
      " 0.067067   0.076094   0.069284   0.070292   0.070238   0.065854\n",
      " 0.069871   0.071883   0.070599   0.072089   0.072537   0.068858\n",
      " 0.069821   0.084178   0.070452   0.078318   0.078264   0.069376\n",
      " 0.07026    0.069219   0.070531   0.06951    0.068209   0.07118\n",
      " 0.066748   0.069711   0.069657   0.072629   0.070185   0.073691\n",
      " 0.067916   0.067334   0.068714   0.06858    0.069114   0.069916\n",
      " 0.071659   0.073789   0.070368   0.068563   0.0688361  0.068516\n",
      " 0.068462   0.068633   0.067642   0.078861   0.081763   0.067954\n",
      " 0.071912   0.071322   0.09517    0.067639   0.070291   0.071805\n",
      " 0.073319   0.066132   0.071473   0.114102   0.104202   0.066591\n",
      " 0.067552   0.095012   0.090007   0.066843   0.070894   0.06965\n",
      " 0.07574    0.072904   0.075794   0.069648   0.069595   0.066964\n",
      " 0.091415   0.091361   0.061443   0.061389   0.070009   0.072463\n",
      " 0.067751   0.06600417 0.064518   0.073698   0.070801   0.07377\n",
      " 0.066754   0.069251   0.067671   0.086968   0.086914   0.007216\n",
      " 0.074363   0.068285   0.066181   0.066755   0.076375   0.081183\n",
      " 0.083822   0.083194   0.067297   0.06618    0.066126   0.072194\n",
      " 0.068221   0.070697   0.070643   0.076095   0.068231   0.06782\n",
      " 0.067485   0.07219288 0.098125   0.098071   0.075242   0.08071\n",
      " 0.06936225 0.066973   0.076675   0.068039   0.068763   0.066174\n",
      " 0.06967119 0.097563   0.06988456 0.067328   0.066329   0.068636\n",
      " 0.073209   0.068183   0.082411   0.084517   0.069873   0.071818\n",
      " 0.097733   0.097679   0.073917   0.068491   0.067643   0.072687\n",
      " 0.080889   0.080835   0.065955   0.06504    0.06974    0.070375\n",
      " 0.070177   0.082494   0.08244    0.077807   0.066646   0.066904\n",
      " 0.072      0.069497   0.068177   0.065172   0.06748    0.067682\n",
      " 0.067628   0.072383   0.093872   0.072319   0.072265   0.09575\n",
      " 0.069578   0.069848   0.068607   0.068223   0.095291   0.065763\n",
      " 0.064002   0.06875    0.069079   0.069025   0.075855   0.073533\n",
      " 0.012183   0.070588   0.099635   0.069036   0.066167   0.065351\n",
      " 0.071402   0.069392   0.066808   0.067914   0.05851    0.058456\n",
      " 0.069617   0.068974   0.066906   0.067175   0.099116   0.067026\n",
      " 0.09257    0.090789   0.067971   0.071165  ]\n",
      "price_p1_fix: [58.93677408 58.93677996 59.17346796 40.5659694  40.565973   40.728885\n",
      " 43.3255462  44.26693116 44.26692996 44.44470996 46.44471036 41.2288854\n",
      " 41.0622186   0.         45.94470996 45.76093116 45.76092996 -0.1629156\n",
      " 59.20693116 59.20692996 41.3955522  41.06396988 45.44470956 41.0639694\n",
      " 46.25892636 59.44470996 18.91619796 18.9162     37.89125232 37.891254\n",
      " 38.043426   39.80040816 45.29280708 46.50792996 -0.162912   53.23093116\n",
      " 53.23092996 47.94471036 40.565976   54.74040816 53.44470996 47.44470996\n",
      " 44.266932   45.26293356 44.444712   38.98287504 39.13942704 39.97818696\n",
      " 46.94470956 41.8955514  46.65732996 45.29281068 46.84470996 35.55576792\n",
      " 14.94       59.01055236 59.01055596 40.728888   41.02101792 45.29280996\n",
      " 16.291554   32.583108   41.5622178  42.04342596 39.81827424 -0.1777788\n",
      " 41.7288846  48.76440816 40.5511062  59.173464  ]\n",
      "price_p2_fix: [36.34472628 36.344721   36.490689   24.33958068 24.33957804 24.43733004\n",
      " 10.69820076  0.         24.93733044 24.77066364  0.069113   -0.09774936\n",
      " 25.10399724 24.83758116 24.83758644  9.46628604  9.466284   24.61261404\n",
      " -0.097752   24.339576   24.61261224 19.50830604 19.58665404 25.60399644\n",
      " 36.39293964 36.392937   24.437328    9.77493204 19.54986408 25.27066284\n",
      " 25.32126204  0.09555567 25.43732964 36.490692  ]\n",
      "price_p3_fix: [ 8.33426016  8.33426304  8.36773104 16.22638872 16.22638296 16.29155496\n",
      "  6.45543648  0.         16.79155536 16.62488856 -0.06516624 16.95822216\n",
      " 16.72438908 16.72439136  6.92775     6.927756   16.40841096 -0.065172\n",
      " 16.226388   16.4084058  14.27684196 14.33417796 17.45822136  8.3025648\n",
      "  8.30255904 16.29156     6.51662196 13.03324392 17.12488776 17.29155456\n",
      "  8.367732  ]\n"
     ]
    }
   ],
   "source": [
    "for col in smerge:\n",
    "    print(f'{col}: {smerge[col].unique()}')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Scaling the columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 206,
   "metadata": {},
   "outputs": [],
   "source": [
    "cols_to_scale = ['term', 'cons_12m', 'cons_gas_12m', 'forecast_cons_12m', 'forecast_discount_energy', 'forecast_meter_rent_12m', 'forecast_price_energy_p1', 'forecast_price_energy_p2', 'forecast_price_pow_p1', 'imp_cons', 'margin_gross_pow_ele', 'margin_net_pow_ele', 'nb_prod_act', 'net_margin', 'pow_max', 'price_p1_var', 'price_p2_var', 'price_p3_var', 'price_p1_fix', 'price_p2_fix', 'price_p3_fix']   \n",
    "scaler = MinMaxScaler()\n",
    "smerge[cols_to_scale] = scaler.fit_transform(smerge[cols_to_scale])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>churn</th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <th>has_gas</th>\n",
       "      <th>...</th>\n",
       "      <th>origin_kamk</th>\n",
       "      <th>origin_ldks</th>\n",
       "      <th>origin_lxid</th>\n",
       "      <th>origin_usap</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>102083</th>\n",
       "      <td>1</td>\n",
       "      <td>0.605604</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.639944</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.624846</td>\n",
       "      <td>0.421557</td>\n",
       "      <td>0.499875</td>\n",
       "      <td>0.685802</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.449939</td>\n",
       "      <td>0.45035</td>\n",
       "      <td>0.613022</td>\n",
       "      <td>0.686095</td>\n",
       "      <td>0.670569</td>\n",
       "      <td>0.933422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52044</th>\n",
       "      <td>0</td>\n",
       "      <td>0.570906</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.654217</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.357263</td>\n",
       "      <td>0.523713</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.534029</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745435</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145546</th>\n",
       "      <td>0</td>\n",
       "      <td>0.534523</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.603041</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.389486</td>\n",
       "      <td>0.521534</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.771050</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.540203</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745435</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        churn  cons_12m  cons_gas_12m  forecast_cons_12m  \\\n",
       "102083      1  0.605604           0.0           0.639944   \n",
       "52044       0  0.570906           0.0           0.654217   \n",
       "145546      0  0.534523           0.0           0.603041   \n",
       "\n",
       "        forecast_discount_energy  forecast_meter_rent_12m  \\\n",
       "102083                       0.0                 0.624846   \n",
       "52044                        0.0                 0.357263   \n",
       "145546                       0.0                 0.389486   \n",
       "\n",
       "        forecast_price_energy_p1  forecast_price_energy_p2  \\\n",
       "102083                  0.421557                  0.499875   \n",
       "52044                   0.523713                  0.000000   \n",
       "145546                  0.521534                  0.000000   \n",
       "\n",
       "        forecast_price_pow_p1  has_gas  ...  origin_kamk  origin_ldks  \\\n",
       "102083               0.685802        0  ...            0            0   \n",
       "52044                0.745944        0  ...            1            0   \n",
       "145546               0.771050        0  ...            0            0   \n",
       "\n",
       "        origin_lxid  origin_usap  price_p1_var  price_p2_var  price_p3_var  \\\n",
       "102083            1            0      0.449939       0.45035      0.613022   \n",
       "52044             0            0      0.534029       0.00000      0.000000   \n",
       "145546            1            0      0.540203       0.00000      0.000000   \n",
       "\n",
       "        price_p1_fix  price_p2_fix  price_p3_fix  \n",
       "102083      0.686095      0.670569      0.933422  \n",
       "52044       0.745435      0.002672      0.003719  \n",
       "145546      0.745435      0.002672      0.003719  \n",
       "\n",
       "[3 rows x 35 columns]"
      ]
     },
     "execution_count": 207,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smerge.sample(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Checking all the types of the columns. It all needs to be float or int for the model. Hence we dropped all the dates."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "churn                         int64\n",
       "cons_12m                    float64\n",
       "cons_gas_12m                float64\n",
       "forecast_cons_12m           float64\n",
       "forecast_discount_energy    float64\n",
       "forecast_meter_rent_12m     float64\n",
       "forecast_price_energy_p1    float64\n",
       "forecast_price_energy_p2    float64\n",
       "forecast_price_pow_p1       float64\n",
       "has_gas                       int64\n",
       "imp_cons                    float64\n",
       "margin_gross_pow_ele        float64\n",
       "margin_net_pow_ele          float64\n",
       "nb_prod_act                 float64\n",
       "net_margin                  float64\n",
       "pow_max                     float64\n",
       "term                        float64\n",
       "channel_epu                   int64\n",
       "channel_ewp                   int64\n",
       "channel_fix                   int64\n",
       "channel_foo                   int64\n",
       "channel_lmk                   int64\n",
       "channel_sdd                   int64\n",
       "channel_usi                   int64\n",
       "origin_ewxe                   int64\n",
       "origin_kamk                   int64\n",
       "origin_ldks                   int64\n",
       "origin_lxid                   int64\n",
       "origin_usap                   int64\n",
       "price_p1_var                float64\n",
       "price_p2_var                float64\n",
       "price_p3_var                float64\n",
       "price_p1_fix                float64\n",
       "price_p2_fix                float64\n",
       "price_p3_fix                float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 208,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "smerge.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = smerge.drop('churn', axis='columns')\n",
    "y = smerge['churn']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.25,random_state=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(144751, 34)"
      ]
     },
     "execution_count": 211,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(48251, 34)"
      ]
     },
     "execution_count": 212,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>cons_12m</th>\n",
       "      <th>cons_gas_12m</th>\n",
       "      <th>forecast_cons_12m</th>\n",
       "      <th>forecast_discount_energy</th>\n",
       "      <th>forecast_meter_rent_12m</th>\n",
       "      <th>forecast_price_energy_p1</th>\n",
       "      <th>forecast_price_energy_p2</th>\n",
       "      <th>forecast_price_pow_p1</th>\n",
       "      <th>has_gas</th>\n",
       "      <th>imp_cons</th>\n",
       "      <th>...</th>\n",
       "      <th>origin_kamk</th>\n",
       "      <th>origin_ldks</th>\n",
       "      <th>origin_lxid</th>\n",
       "      <th>origin_usap</th>\n",
       "      <th>price_p1_var</th>\n",
       "      <th>price_p2_var</th>\n",
       "      <th>price_p3_var</th>\n",
       "      <th>price_p1_fix</th>\n",
       "      <th>price_p2_fix</th>\n",
       "      <th>price_p3_fix</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>17268</th>\n",
       "      <td>0.837538</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.537216</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.579775</td>\n",
       "      <td>0.439373</td>\n",
       "      <td>0.528062</td>\n",
       "      <td>0.683750</td>\n",
       "      <td>0</td>\n",
       "      <td>0.052063</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.465468</td>\n",
       "      <td>0.471935</td>\n",
       "      <td>0.653512</td>\n",
       "      <td>0.686095</td>\n",
       "      <td>0.670569</td>\n",
       "      <td>0.933422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90446</th>\n",
       "      <td>0.719913</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.624726</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.639727</td>\n",
       "      <td>0.426736</td>\n",
       "      <td>0.513188</td>\n",
       "      <td>0.683750</td>\n",
       "      <td>0</td>\n",
       "      <td>0.508201</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.456277</td>\n",
       "      <td>0.463040</td>\n",
       "      <td>0.668796</td>\n",
       "      <td>0.686095</td>\n",
       "      <td>0.670569</td>\n",
       "      <td>0.933422</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>191156</th>\n",
       "      <td>0.598698</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.648470</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.638684</td>\n",
       "      <td>0.365002</td>\n",
       "      <td>0.471601</td>\n",
       "      <td>0.992466</td>\n",
       "      <td>0</td>\n",
       "      <td>0.528914</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.393039</td>\n",
       "      <td>0.425423</td>\n",
       "      <td>0.628043</td>\n",
       "      <td>0.991481</td>\n",
       "      <td>0.996011</td>\n",
       "      <td>0.479327</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74403</th>\n",
       "      <td>0.830299</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.765533</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.366902</td>\n",
       "      <td>0.600946</td>\n",
       "      <td>0.445878</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.593652</td>\n",
       "      <td>0.382483</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.748417</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6094</th>\n",
       "      <td>0.629120</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.461810</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.380526</td>\n",
       "      <td>0.528911</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>0</td>\n",
       "      <td>0.370250</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.527716</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745435</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18778</th>\n",
       "      <td>0.495347</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.567928</td>\n",
       "      <td>0.797465</td>\n",
       "      <td>0.365866</td>\n",
       "      <td>0.679610</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.771050</td>\n",
       "      <td>0</td>\n",
       "      <td>0.435919</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.670463</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.773575</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>137370</th>\n",
       "      <td>0.556152</td>\n",
       "      <td>0.625317</td>\n",
       "      <td>0.563723</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.386863</td>\n",
       "      <td>0.528911</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.522936</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.748417</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>164389</th>\n",
       "      <td>0.455744</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.490151</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.374278</td>\n",
       "      <td>0.528911</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>0</td>\n",
       "      <td>0.406021</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.521350</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.748417</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83529</th>\n",
       "      <td>0.498106</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.551333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.366829</td>\n",
       "      <td>0.531864</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0.525828</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.748417</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113122</th>\n",
       "      <td>0.438460</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.469591</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.363542</td>\n",
       "      <td>0.535452</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745944</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.543089</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.745435</td>\n",
       "      <td>0.002672</td>\n",
       "      <td>0.003719</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows Ã— 34 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        cons_12m  cons_gas_12m  forecast_cons_12m  forecast_discount_energy  \\\n",
       "17268   0.837538      0.000000           0.537216                  0.000000   \n",
       "90446   0.719913      0.000000           0.624726                  0.000000   \n",
       "191156  0.598698      0.000000           0.648470                  0.000000   \n",
       "74403   0.830299      0.000000           0.765533                  0.000000   \n",
       "6094    0.629120      0.000000           0.461810                  0.000000   \n",
       "18778   0.495347      0.000000           0.567928                  0.797465   \n",
       "137370  0.556152      0.625317           0.563723                  0.000000   \n",
       "164389  0.455744      0.000000           0.490151                  0.000000   \n",
       "83529   0.498106      0.000000           0.551333                  0.000000   \n",
       "113122  0.438460      0.000000           0.469591                  0.000000   \n",
       "\n",
       "        forecast_meter_rent_12m  forecast_price_energy_p1  \\\n",
       "17268                  0.579775                  0.439373   \n",
       "90446                  0.639727                  0.426736   \n",
       "191156                 0.638684                  0.365002   \n",
       "74403                  0.366902                  0.600946   \n",
       "6094                   0.380526                  0.528911   \n",
       "18778                  0.365866                  0.679610   \n",
       "137370                 0.386863                  0.528911   \n",
       "164389                 0.374278                  0.528911   \n",
       "83529                  0.366829                  0.531864   \n",
       "113122                 0.363542                  0.535452   \n",
       "\n",
       "        forecast_price_energy_p2  forecast_price_pow_p1  has_gas  imp_cons  \\\n",
       "17268                   0.528062               0.683750        0  0.052063   \n",
       "90446                   0.513188               0.683750        0  0.508201   \n",
       "191156                  0.471601               0.992466        0  0.528914   \n",
       "74403                   0.445878               0.745944        0  0.000000   \n",
       "6094                    0.000000               0.745944        0  0.370250   \n",
       "18778                   0.000000               0.771050        0  0.435919   \n",
       "137370                  0.000000               0.745944        1  0.000000   \n",
       "164389                  0.000000               0.745944        0  0.406021   \n",
       "83529                   0.000000               0.745944        0  0.000000   \n",
       "113122                  0.000000               0.745944        0  0.000000   \n",
       "\n",
       "        ...  origin_kamk  origin_ldks  origin_lxid  origin_usap  price_p1_var  \\\n",
       "17268   ...            0            0            1            0      0.465468   \n",
       "90446   ...            0            0            1            0      0.456277   \n",
       "191156  ...            0            0            1            0      0.393039   \n",
       "74403   ...            1            0            0            0      0.593652   \n",
       "6094    ...            0            0            1            0      0.527716   \n",
       "18778   ...            0            0            1            0      0.670463   \n",
       "137370  ...            0            1            0            0      0.522936   \n",
       "164389  ...            1            0            0            0      0.521350   \n",
       "83529   ...            0            0            1            0      0.525828   \n",
       "113122  ...            0            1            0            0      0.543089   \n",
       "\n",
       "        price_p2_var  price_p3_var  price_p1_fix  price_p2_fix  price_p3_fix  \n",
       "17268       0.471935      0.653512      0.686095      0.670569      0.933422  \n",
       "90446       0.463040      0.668796      0.686095      0.670569      0.933422  \n",
       "191156      0.425423      0.628043      0.991481      0.996011      0.479327  \n",
       "74403       0.382483      0.000000      0.748417      0.002672      0.003719  \n",
       "6094        0.000000      0.000000      0.745435      0.002672      0.003719  \n",
       "18778       0.000000      0.000000      0.773575      0.002672      0.003719  \n",
       "137370      0.000000      0.000000      0.748417      0.002672      0.003719  \n",
       "164389      0.000000      0.000000      0.748417      0.002672      0.003719  \n",
       "83529       0.000000      0.000000      0.748417      0.002672      0.003719  \n",
       "113122      0.000000      0.000000      0.745435      0.002672      0.003719  \n",
       "\n",
       "[10 rows x 34 columns]"
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "34"
      ]
     },
     "execution_count": 214,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(x_train.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train = np.asarray(x_train).astype(np.float32)\n",
    "y_train = np.asarray(y_train).astype(np.float32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [],
   "source": [
    "model = keras.Sequential([\n",
    "    keras.layers.Dense(30, input_shape=(34,), activation ='relu'),\n",
    "    keras.layers.Dense(1, activation='sigmoid'),\n",
    "])\n",
    "\n",
    "model.compile(optimizer='adam',\n",
    "             loss='binary_crossentropy',\n",
    "             metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "model.fit(x_train, y_train, epochs=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1508/1508 [==============================] - 1s 512us/step - loss: 0.2885 - accuracy: 0.8991\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[0.28846311569213867, 0.8990901708602905]"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.evaluate(x_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.90759075],\n",
       "       [0.99455506],\n",
       "       [0.9089595 ],\n",
       "       [0.9539132 ],\n",
       "       [0.9732163 ]], dtype=float32)"
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "yp = model.predict(x_test)\n",
    "yp[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "66186     1\n",
       "44925     1\n",
       "83092     1\n",
       "182845    1\n",
       "50420     0\n",
       "80522     1\n",
       "52813     1\n",
       "2845      1\n",
       "186418    1\n",
       "39000     1\n",
       "Name: churn, dtype: int64"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = []\n",
    "for element in yp:\n",
    "    if element > 0.5:\n",
    "        y_pred.append(1)\n",
    "    else:\n",
    "        y_pred.append(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]"
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred[:10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.57      0.04      0.07      4915\n",
      "           1       0.90      1.00      0.95     43336\n",
      "\n",
      "    accuracy                           0.90     48251\n",
      "   macro avg       0.74      0.52      0.51     48251\n",
      "weighted avg       0.87      0.90      0.86     48251\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since the model has 90% accuracy, the model can be trusted."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(69.0, 0.5, 'Truth')"
      ]
     },
     "execution_count": 179,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x504 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cm = tf.math.confusion_matrix(labels = y_test,predictions=y_pred)\n",
    "\n",
    "plt.figure(figsize = (10,7))\n",
    "sns.heatmap(cm, annot=True, fmt='d')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Truth')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Factors that highly affect the churn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "metadata": {},
   "outputs": [],
   "source": [
    "classifier = RandomForestClassifier(n_estimators=200, random_state=5)  \n",
    "classifier.fit(x_train, y_train)  \n",
    "predictions = classifier.predict(x_test)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "feat_importances = pd.Series(classifier.feature_importances_, index=x.columns)\n",
    "feat_importances.nlargest(15).plot(kind='barh')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Insights"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From the model, price is not a major factor of the churn. \n",
    "According to the model:\n",
    "\n",
    "1. Electricity consumption for the past 12 months is the highest determinant of the customer churn. This is followed by the \n",
    "2. Total net margin \n",
    "2. Forecasted bill of meter rental for the next 12 months\n",
    "3. Forecasted electricity consumption for next 12 months \n",
    "4. Net margin on power subscription."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
